panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(size = 4, aes(label = Country.Region), alpha = 0.5) +
labs(x ="Age 65 and Above (% of Total Population)",
y = "Cases Per 1,000 Population")+
scale_size(range = c(1, 14))+
expand_limits(y = -1)+
guides(color=FALSE)+
guides(size = guide_legend(title="Death Rate (%)")) +
theme(legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "transparent"))
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
size = 4, aes(label = Country.Region), alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
size = 4, aes(label = Country.Region), alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region,label = Country.Region),
size = 4, alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4, alpha = 0.5)
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4, alpha = 0.5) +
labs(x ="Age 65 and Above (% of Total Population)",
y = "Cases Per 1,000 Population")+
scale_size(range = c(1, 14))+
expand_limits(y = -1)+
guides(color=FALSE)+
guides(size = guide_legend(title="Death Rate (%)")) +
theme(legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "transparent"))
base_p <-
#  spdata %>%
# ggplot(aes(x = over_65_per_population, y = cases_per_population,
#            size = death_rate))+
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.5)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4, alpha = 0.5) +
labs(x ="Age 65 and Above (% of Total Population)",
y = "Cases Per 1,000 Population")+
scale_size(range = c(1, 14))+
expand_limits(y = -1)+
guides(color=FALSE)+
guides(size = guide_legend(title="Death Rate (%)")) +
theme(legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "transparent"))
spdata$Country.Region
add_point_df <- spdata %>% filter(Country.Region == "United Kingdom")
base_p +
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1)
base_p +
geom_point( data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1)
base_p +
geom_point( data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1,  stroke = 1)
base_p +
geom_point( data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1,  stroke = 1)+
geom_text_repel(
data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4)
base_p <-
#  spdata %>%
# ggplot(aes(x = over_65_per_population, y = cases_per_population,
#            size = death_rate))+
ggplot()+
theme(panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color = "gray50", size = 0.2),
panel.background = element_blank(),
axis.ticks.y = element_blank()
)+
geom_point( data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1, fill = "White", stroke = 1,
#aes(color = Country.Region),
alpha = 0.3)+
geom_text_repel(
data = spdata,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4, alpha = 0.3) +
labs(x ="Age 65 and Above (% of Total Population)",
y = "Cases Per 1,000 Population")+
scale_size(range = c(1, 14))+
expand_limits(y = -1)+
guides(color=FALSE)+
guides(size = guide_legend(title="Death Rate (%)")) +
theme(legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "transparent"))
base_p +
geom_point( data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate,color = Country.Region),
shape = 1,  stroke = 1)+
geom_text_repel(
data = add_point_df,
aes(x = over_65_per_population, y = cases_per_population,
size = death_rate, label = Country.Region),
size = 4)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
getwd()
setwd("/Users/panyujun/Documents/Portfolio/covid_dashboard/data")
write.csv(pop_50, "pop_50.csv",row.names=FALSE)
write.csv(pop, "pop.csv", row.names = FALSE)
View(pop)
View(pop_50)
View(pop)
View(pop_50)
View(add_point_df)
write.csv(spdata, "spdata.csv", row.names = FALSE)
spdata <- read.csv("https://raw.githubusercontent.com/suranne-yujun-pan/covid_dashboard/master/data/spdata.csv")
spdata$Date <- spdata$Date %>% as.character() %>% as.Date()
names(spdata)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
source("~/Documents/Crona/Country_Charts/get_country_data.R")
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
View(pop)
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/set_who_name.R")
pop <- read_excel("~/Documents/Crona/Country_Charts/UN Population Prospects Data_2018_by age group.xlsx",
sheet = "Data", skip = 1) %>%
slice(-c(1:26))
pop$pop_over_65 <- rowSums(pop[,19:ncol(pop)])
pop$population <- rowSums(pop[6:26])
View(pop)
pop_china <- pop %>%
filter(grepl("China", Location))
View(pop_china)
pop_china <- pop_china %>%
adorn_totals("row") %>%
filter(Location == "Total") %>%
mutate(Location = "China")
View(pop_china)
pop_china <- pop %>%
filter(grepl("China", Location))
View(pop_china)
pop_china %>%
adorn_totals("row")
pop_china %>%
adorn_totals("row") %>%
filter(Location == "-")
pop_china %>%
adorn_totals("row") %>%
filter(Location == "-") %>%
mutate(Location = "China")
pop_china <- pop_china %>%
adorn_totals("row") %>%
filter(Location == "-") %>%
mutate(Location = "China")
pop <- pop %>%
filter(! grepl("Southern", Location) ,
! grepl("Central", Location) ,
! grepl("Eastern", Location),
! grepl("Northern", Location),
! grepl("Western", Location),
! grepl("Middle", Location),
! grepl("Australia/New Zealand", Location),
! grepl("Oceania", Location),
! grepl("Europe", Location),
! grepl("Caribbean", Location),#South America
! grepl("South America", Location)
)
rm_list_pop <- c("Mayotte",
"Réunion",
"Turkmenistan")
pop <- pop %>%
filter(! Location %in% rm_list_pop) %>%
select(Location, pop_over_65, population)
View(pop)
pop$Location <- pop$Location %>% set_who_name()
pop  <- bind_rows(pop, pop_china) #%>% View()
rm(pop_china)
View(pop)
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/set_who_name.R")
pop <- read_excel("~/Documents/Crona/Country_Charts/UN Population Prospects Data_2018_by age group.xlsx",
sheet = "Data", skip = 1) %>%
slice(-c(1:26))
pop$pop_over_65 <- rowSums(pop[,19:ncol(pop)])
pop$population <- rowSums(pop[6:26])
pop_china <- pop %>%
filter(grepl("China", Location))
pop_china <- pop_china %>%
adorn_totals("row") %>%
filter(Location == "-") %>%
mutate(Location = "China")
pop <- pop %>%
filter(! grepl("Southern", Location) ,
! grepl("Central", Location) ,
! grepl("Eastern", Location),
! grepl("Northern", Location),
! grepl("Western", Location),
! grepl("Middle", Location),
! grepl("Australia/New Zealand", Location),
! grepl("Oceania", Location),
! grepl("Europe", Location),
! grepl("Caribbean", Location),#South America
! grepl("South America", Location)
)
rm_list_pop <- c("Mayotte",
"Réunion",
"Turkmenistan")
View(pop_china)
View(pop)
pop %>%
filter(! Location %in% rm_list_pop)
pop %>%
filter(! Location %in% rm_list_pop) %>%
select(Location, pop_over_65, population)
pop %>%
filter(! Location %in% rm_list_pop) %>%
select(Location, pop_over_65, population) %>% View()
pop  <- bind_rows(pop, pop_china) #%>% View()
View(pop)
View(pop_china)
View(pop)
pop$`ISO 3166-1 numeric code`
pop$`ISO 3166-1 numeric code` %>% class()
pop_china$`ISO 3166-1 numeric code` %>% class()
pop$`ISO 3166-1 numeric code` <- as.character(pop$`ISO 3166-1 numeric code`)
bind_rows(pop, pop_china) #%>% View()
pop  <- bind_rows(pop, pop_china) #%>% View()
View(pop)
pop <- pop %>%
filter(! Location %in% rm_list_pop) %>%
select(Location, pop_over_65, population)
View(pop)
pop$Location <- pop$Location %>% set_who_name()
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
View(pop)
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
View(pop)
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
View(pop)
source("~/Documents/Crona/Country_Charts/get_country_data.R")
cty_list <- countries_ts$Country.Region %>% unique()
pop %>%
filter(Location %in% cty_list) %>% View()
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
rm(cty_list, rm_list_pop, urls, n_1, n_2, list, condition_name)
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
source("~/Documents/Crona/Country_Charts/get_country_data.R")
source("~/Documents/Portfolio/learning/covid_dashboard/source code/scatter_plot/get_population_data.R")
getwd()
setwd("/Users/panyujun/Documents/Portfolio/covid_dashboard/data")
write.csv(countries_ts, "countries_ts.csv", row.names = FALSE)
write.csv(countries_ts_c, "countries_ts_c.csv", row.names = FALSE)
write.csv(pop, "pop.csv", row.names = FALSE)
country_list <- countries_ts_c %>%
filter(Date == max(Date)) %>%
arrange(desc(positive)) %>%
slice(1:50) %>%
select(Country.Region) %>% pull()
spdata <- countries_ts_c %>%
filter(Date == max(Date)#,
#Country.Region %in% country_list
) %>%
filter(!is.na(positive)) %>%
mutate(Country.Region = as.character(Country.Region)) %>%
full_join(., pop_50, by = c("Country.Region" = "Location"))%>%
mutate(over_65_per_population = pop_over_65/population*100,
cases_per_population = positive/population,
death_rate = deaths/positive*100
)
countries_ts_c %>%
filter(Date == max(Date)#,
#Country.Region %in% country_list
) %>%
filter(!is.na(positive)) %>%
mutate(Country.Region = as.character(Country.Region))
countries_ts_c %>%
filter(Date == max(Date)#,
#Country.Region %in% country_list
) %>%
filter(!is.na(positive)) %>%
mutate(Country.Region = as.character(Country.Region)) %>%
full_join(., pop, by = c("Country.Region" = "Location"))
countries_ts_c %>%
filter(Date == max(Date)#,
#Country.Region %in% country_list
) %>%
filter(!is.na(positive)) %>%
mutate(Country.Region = as.character(Country.Region)) %>%
full_join(., pop, by = c("Country.Region" = "Location"))%>%
mutate(over_65_per_population = pop_over_65/population*100,
cases_per_population = positive/population,
death_rate = deaths/positive*100
)
spdata <- countries_ts_c %>%
filter(Date == max(Date)#,
#Country.Region %in% country_list
) %>%
filter(!is.na(positive)) %>%
mutate(Country.Region = as.character(Country.Region)) %>%
full_join(., pop, by = c("Country.Region" = "Location"))%>%
mutate(over_65_per_population = pop_over_65/population*100,
cases_per_population = positive/population,
death_rate = deaths/positive*100
)
View(spdata)
write.csv(spdata, "spdata.csv", row.names = FALSE)
min(countries_ts_c$Date)
max(countries_ts_c$Date)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
View(countries_ts_c)
x <- countries_ts_c
x <- x %>%
arrange(Country.Region, Date)
list <- split(x, x$Country.Region)
list <- lapply(list, function(x) x %>%
mutate(roll_avg = rollmean(positive_diff, k = 7, fill = NA)))
x <- do.call("rbind", list)
write.csv(countries_ts_c, "countries_ts_c.csv", row.names = FALSE)
write.csv(pop, "pop.csv", row.names = FALSE)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
x <- read.csv("https://raw.githubusercontent.com/suranne-yujun-pan/covid_dashboard/master/data/countries_ts_c.csv",
stringsAsFactors=FALSE) #%>% View()
x$Date <- x$Date %>% as.character() %>% as.Date()
names(x)
View(x)
x <- countries_ts_c
x <- x %>%
arrange(Country.Region, Date)
list <- split(x, x$Country.Region)
list <- lapply(list, function(x) x %>%
mutate(roll_avg = rollmean(positive_diff, k = 7, fill = NA)))
x <- do.call("rbind", list)
countries_ts_c <- x
write.csv(countries_ts_c, "countries_ts_c.csv", row.names = FALSE)
View(countries_ts_c)
View(pop)
View(spdata)
spdata %>%
arrange(desc(positive)) %>%
slice(1:50) %>%
select(Country.Region) %>% pull()
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
x <- read.csv("https://raw.githubusercontent.com/suranne-yujun-pan/covid_dashboard/master/data/countries_ts_c.csv",
stringsAsFactors=FALSE) #%>% View()
x$Date <- x$Date %>% as.character() %>% as.Date()
View(x)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
names(x)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
unique(countries_ts$condition)
names(df)
df <- read.csv("https://raw.githubusercontent.com/suranne-yujun-pan/covid_dashboard/master/data/countries_ts.csv",
stringsAsFactors=FALSE)
df$Date <- df$Date %>% as.character() %>% as.Date()
names(df)
names(df)
names(df)[2]
names(df)[3]
names(df)[3] <- "cases"
unique(df$cases)
df$cases <- ifelse(df$cases == "currently_positive",
"currently positive", df$cases)
unique(df$cases)
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/learning/covid_dashboard/Covid_dashboard')
runApp('~/Documents/Portfolio/covid_dashboard')
